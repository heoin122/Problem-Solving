/*
	2665_미로만들기

	DFS 탐색을 이용해서 최소의 벽을 부셔서 목적지까지 도착하는 문제였다.
	전역 배열에 최소값을 갱신하면서 이동하면 된다.
	Only First
*/
#include <iostream>
#include <string.h>
#include <string>

using namespace std;

char a[60][60];
int val[60][60], dir[4][2] = { {0, 1}, {1, 0}, {0, -1}, {-1, 0} };
int n;

void back(int row, int col) {
	if(row == n - 1 && col == n - 1) return;
	
	for(int i = 0; i < 4; i++){
		int nextRow = row + dir[i][0];
		int nextCol = col + dir[i][1];
		
		if(nextRow < 0 || nextRow >= n || nextCol < 0 || nextCol >= n || val[nextRow][nextCol] <= val[row][col] + (a[nextRow][nextCol] == '0')) continue;
		
		if(a[nextRow][nextCol] == '0') val[nextRow][nextCol] = val[row][col] + 1;
		else val[nextRow][nextCol] = val[row][col];
		back(nextRow, nextCol);
	}
}
int main() {
	scanf("%d", &n);
	for(int i = 0; i<n; i++){
		scanf("%s", a[i]);
	}
	
	for(int i = 0; i<n; i++)
		for(int j = 0; j<n; j++)
			val[i][j] = 987654321;
	
	if(a[0][0] == '0') val[0][0] = 1;
	else val[0][0] = 0;
	
	back(0, 0);
	printf("%d", val[n-1][n-1]);
	return 0;
}