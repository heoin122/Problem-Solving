/*
	11585_속타는 저녁 메뉴
	
	KMP, PartialMatchTable, GCD
	KMP 알고리즘으로 문자열 검색을 하면 되는 문제였다.
	Only First
*/
#include <iostream>
#include <string>
#include <vector>

using namespace std;

vector<int> getPartialMatch(const string &s) {
	int m = s.size();
	vector<int> pi(m, 0);
	
	int begin = 1, matched = 0;
	
	while(begin < m) {
		if(begin + matched < m && s[begin+matched] == s[matched]) {
			pi[begin+matched] = matched + 1;
			matched++;
		} else {
			if(matched == 0) ++begin;
			else {
				begin += matched - pi[matched-1];
				matched = pi[matched-1];
			}
		}
	}
	return pi;
}
int search(const string &h, const string &s) {
		vector<int> pi = getPartialMatch(s);
		int ret = 0, n = h.size(), m = s.size();
		int begin = 0, matched = 0;
		
		while(begin + matched < n) {
			if(matched  < m && h[begin + matched] == s[matched]) {
				++matched;
			} else {
				if(matched == 0) begin++;
				else {
					if(matched == m) ret++;
					begin += matched - pi[matched-1];
					matched = pi[matched-1];
				}
			}
		}
		return ret;
}
int gcd(int a, int b) {
	if(a == 0) return b;
	return gcd(b % a, a);
}
int main() {
	string h, s;
	char temp;
	int n;

	scanf("%d\n", &n);
	for(int i = 0; i<n; i++) {
		scanf("%c ", &temp);
		s += temp;
	}
	for(int i = 0; i<n; i++) {
		scanf("%c ", &temp);
		h += temp;
	}
	h += h;
	int matchedCnt = search(h, s);
	int G = gcd(matchedCnt, n);
	printf("%d/%d", matchedCnt/G, n/G);
	return 0;
}