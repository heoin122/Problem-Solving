/*
	10266_시계 사진들

	KMP, Parital Match Table
	2개의 시계에 침들이 많다. 회전을 시켰을 때 같은 시계인지 판별하는 문제였다.
	같은 시계라는 것은 시침들 사이의 각도가 같다라는 생각으로 
	0 27000
	18000 27000 
	하나의 시계를 2배로 복사해서 단위 수를 늘렸다. (그전에 정렬을 해놓는다.)
	0 27000 36000 63000
	18000 27000
	그리고 각도 차이를 구해서
	27000 9000 27000
	9000 
	kmp로 일치하는 문자열이 있는지 탐색하였다.
	
	Only_First
*/

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> getPartialMatch(const vector<int>& s) {
	int m = s.size();
	vector<int> pi(m, 0);
	int begin =  1, matched = 0;
	while(begin + matched < m) {
		if(s[begin+matched] == s[matched]) {
			pi[begin+matched] = matched + 1;
			++matched;
		} else {
			if(matched == 0) begin++;
			begin += matched - pi[matched-1];
			matched = pi[matched-1];
		}
	}
	return pi;
}

bool search(const vector<int>& h, const vector<int>& s) {
	int n = h.size(), m = s.size();
	vector<int> pi = getPartialMatch(s);
	int begin = 0, matched = 0;
	while(begin + matched < n) {
		if(matched < m && h[begin + matched] == s[matched]) {
			++matched;
		} else {
			if(matched == m) return true;
			if(matched == 0) begin++;
			begin += matched - pi[matched-1];
			matched = pi[matched-1];
		}
	}
	if(matched == m) return true;
	return false;
}
int main() {
	int n;
	scanf("%d", &n);
	vector<int> htemp(n), stemp(n);
	for(int i = 0; i<n; i++) scanf("%d", &htemp[i]);
	for(int i = 0; i<n; i++) scanf("%d", &stemp[i]);
	sort(htemp.begin(), htemp.end());
	sort(stemp.begin(), stemp.end());
	for(int i = 0; i<n; i++){
		htemp.push_back(htemp[i] + 360000);
	}
	vector<int> h, s;
	for(int i = 1; i<2 * n; i++){
		h.push_back(htemp[i] - htemp[i-1]);
	}
	for(int i = 1; i<n; i++){
		s.push_back(stemp[i] - stemp[i-1]);
	}
	bool isPossible = search(h, s);
	if(isPossible) printf("possible");
	else printf("impossible");
	return 0;
}