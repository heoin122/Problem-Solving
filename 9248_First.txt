/*
	9248_Suffix Array
	
	접미사배열과 LCP Array를 구하는 문제였다.
	다른 분들의 코드를 참고한 해결이었다.
	나만의 것으로 만들자.
	First 
*/
#include <iostream>
#include <algorithm>
#include <cstring>
#include <vector>

using namespace std;

#define MAXN 500005

char a[MAXN];
int n, t, g[MAXN], tg[MAXN], SA[MAXN], LCP[MAXN], r[MAXN];
bool cmp(int x, int y) {
	if(g[x] == g[y]) return g[x+t] < g[y+t];
	return g[x] < g[y];
}
void getSA(const char* str) {
	t = 1;
	for(int i = 0; i<n; i++) {
		SA[i] = i;
		g[i] = str[i] - 'a';
	}
	while(t <= n) {
			g[n] = -1;
			sort(SA, SA + n, cmp);
			tg[SA[0]] = 0;
			for(int i = 1; i < n; i++) {
				if(cmp(SA[i-1], SA[i])) tg[SA[i]] = tg[SA[i - 1]] + 1;
				else tg[SA[i]] = tg[SA[i-1]];
			}
			for(int i = 0; i<n; i++) g[i] = tg[i];
			t <<= 1;
	}
}
int main() {
	scanf("%s", a);
	n = strlen(a);
	getSA(a);
	for(int i = 0; i < n; i++) r[SA[i]] = i;
	
	int len = 0;
	for(int i = 0; i<n; i++) {
		int k = r[i];
		if(k) {
			int j = SA[k-1];
			while(a[j + len] == a[i + len])
				len++;
			
			LCP[k] = len;
			if(len) len--;
		}
	}
	for(int i = 0; i<n; i++) printf("%d ", SA[i] + 1);
	printf("\n");
	for(int i = 0; i<n; i++) {
		if(!i) printf("x ");
		else printf("%d ", LCP[i]);
	}
	return 0;
}