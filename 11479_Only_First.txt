/*
	11479_서로 다른 부분 문자열의 개수 2
	Suffix Array와 LCP Array를 이용하는 문제이다.
	확실히 알아두자!
	Only_First
*/
#include <iostream>
#include <string.h>
#include <algorithm>
using namespace std;

const int MAXN = 3000010;

char a[MAXN];
int g[MAXN], tg[MAXN], SA[MAXN], LCP[MAXN], r[MAXN];
int t;

bool cmp(int i, int j) {
	if(g[i] == g[j]) return g[i+t] < g[j+t];
	return g[i] < g[j];
}

int main() {
	scanf("%s", a);
	int n = strlen(a);
	
	for(int i = 0; i<n; i++) {
		g[i] = a[i] - 'a';
		SA[i] = i;
	}
	t = 1;
	while(t <= n) {
		g[n] = -1;
		sort(SA, SA + n, cmp);
		tg[SA[0]] = 0;	
		for(int i = 1; i < n; i++) {
			if(cmp(SA[i-1], SA[i])) {
				tg[SA[i]] = tg[SA[i-1]] + 1;
			} else tg[SA[i]] = tg[SA[i-1]];
		}
		for(int i = 0; i < n; i++) g[i] = tg[i];
		t <<= 1;
	}
	for(int i = 0; i < n; i++) r[SA[i]] = i;
	int len = 0;
	
	long long int ans = (long long int)(n + 1) * (long long int)n / 2;
	for(int i = 0; i < n; i++) {
		int k = r[i];
		if(k) {
			int j = SA[k-1];
			while(a[j + len] == a[i + len]) len++;
			
			LCP[k] = len;
			ans -= len;
			if(len) len--;
		}
	}
	printf("%lld", ans);
	return 0;
}